---
import chip from "@assets/utilities/chip.svg";
import costream from "@assets/utilities/costream.svg";
import megaphone from "@assets/utilities/megaphone.svg";
import star from "@assets/utilities/star.svg";

import UtilityTile from "./UtilityTile.astro";

const UTILITIES = [
  {
    title: "Ads Embedding",
    slug: "ads",
    video: "/example-video-red.mp4",
    icon: megaphone,
    description:
      "Seamlessly embed targeted **commercials** and branded content directly into **live video streams**.",
  },
  {
    title: "AI Effects",
    slug: "ai",
    video: "/example-video-green.mp4",
    icon: chip,
    description:
      "Automate **real-time transformations** like **AI-powered blurring**, redaction, or custom filters for live video.",
  },
  {
    title: "Collab Streaming",
    slug: "collab",
    video: "/example-video-blue.mp4",
    icon: costream,
    description:
      "Effortlessly combine multiple **live video feeds** from remote participants into a single, cohesive **collaborative stream**.",
  },
  {
    title: "AR Avatars",
    slug: "ar",
    video: "/example-video-purple.mp4",
    icon: star,
    description:
      "Integrate **real-time AR avatars** and virtual characters directly into **live video streams** for interactive use cases.",
  },
] as const;
---

<section
  id="utilities"
  class="px-4 my-40 flex flex-row justify-center items-center w-full relative sm:px-12 sm:pb-14 2xl:pb-20 2xl:h-fit scroll-mt-[30svh]"
>
  <div class="flex flex-row">
    <div class="flex flex-col w-full px-12">
      <div class="flex gap-8">
        <div class="flex flex-2 min-w-[520px] flex-col gap-4 text-start">
          <div class="flex">
            <h2 class="text-ai-header">Flexible live stream utilities</h2>
            <div
              class="ml-2 px-3 h-fit py-1 rounded-full text-xs font-medium border text-nowrap"
              style={{
                backgroundColor: "#C2B1E0",
                color: "#302555",
                borderColor: "#624BAA",
              }}
            >
              Available soon
            </div>
          </div>
          <p class="text-useCases-tileSubheader">
            Build powerful live stream experiences. Our programmable toolkit
            gives developers ultimate control over real-time video composition
            and dynamic content integration directly into their applications.
          </p>
          <div class="flex gap-4 flex-wrap">
            {UTILITIES.map((utility) => <UtilityTile {...utility} />)}
          </div>
        </div>
        <div class="relative flex flex-3 aspect-video">
          {
            UTILITIES.map(({video, slug}, index) => (
              <video
                id={`utility-video-${slug}`}
                class:list={["absolute top-0 left-0 aspect-video rounded-xl object-cover opacity-0 utility-video", index === 0 && "opacity-100"]}
                playsinline
                autoplay
                muted
                loop
              >
                <source src={video} type="video/mp4" />
                Your browser does not support the video tag.
              </video>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</section>

<style is:global>
  .scroller {
    max-width: 650px;
    cursor: pointer;
  }

  .scroller__inner {
    padding-block: 1.5rem;
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
  }

  .scroller {
    overflow: hidden;
    -webkit-mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    );
    mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    );
  }

  .scroller[data-animated="true"] .scroller__inner {
    width: max-content;
    flex-wrap: nowrap;
    animation: scroll var(--_animation-duration, 40s)
      var(--_animation-direction, forwards) linear infinite;
    animation-play-state: running;
  }

  .scroller[data-animated="false"] .scroller__inner {
    width: max-content;
    flex-wrap: nowrap;
    animation: scroll var(--_animation-duration, 40s)
      var(--_animation-direction, forwards) linear infinite;
    animation-play-state: paused;
  }

  .scroller[data-direction="right"] {
    --_animation-direction: reverse;
  }

  .scroller[data-direction="left"] {
    --_animation-direction: forwards;
  }

  .scroller[data-speed="fast"] {
    --_animation-duration: 20s;
  }

  .scroller[data-speed="slow"] {
    --_animation-duration: 40s;
  }

  @keyframes scroll {
    to {
      transform: translate(calc(-50% - 0.5rem));
    }
  }
</style>

<script is:inline>
  document.querySelectorAll(".contact-link").forEach((link) => {
    link.addEventListener("click", function (event) {
      event.preventDefault(); // Stop the link from navigating as usual
      const selectElement = document.getElementById("contact-select");
      if (selectElement) {
        selectElement.value = "feature-request"; // Update the select value
        selectElement.dispatchEvent(new Event("change")); // If needed, trigger the 'change' event
      }
      // Optionally, add smooth scroll to the contact section
      const contactSection = document.getElementById("contact");
      if (contactSection) {
        contactSection.scrollIntoView({ behavior: "smooth" });
      }
    });
  });
</script>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    const videos = document.querySelectorAll('.utility-video');
    let index = 0;

    function updateVideos() {
      videos.forEach((video) => {
        video.style.opacity = '0';
        video.pause();
        video.currentTime = 0;
      });
      videos[index].style.opacity = '1';
      videos[index].play();
      index = (index + 1) % videos.length;
    }

    updateVideos();
    setInterval(updateVideos, 8000);
  });
</script>