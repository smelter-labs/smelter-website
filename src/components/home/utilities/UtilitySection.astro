---
import chip from "@assets/utilities/chip.svg";
import costream from "@assets/utilities/costream.svg";
import megaphone from "@assets/utilities/megaphone.svg";
import star from "@assets/utilities/star.svg";

import UtilityTile from "./UtilityTile.astro";

const UTILITIES = [
  {
    title: "Ads Embedding",
    icon: megaphone,
    description:
      "Seamlessly embed targeted **commercials** and branded content directly into **live video streams**.",
  },
  {
    title: "AI Effects",
    icon: chip,
    description:
      "Automate **real-time transformations** like **AI-powered blurring**, redaction, or custom filters for live video.",
  },
  {
    title: "AR Avatars",
    icon: star,
    description:
      "Integrate **real-time AR avatars** and virtual characters directly into **live video streams** for interactive use cases.",
  },
  {
    title: "Collab Streaming",
    icon: costream,
    description:
      "Effortlessly combine multiple **live video feeds** from remote participants into a single, cohesive **collaborative stream**.",
  },
] as const;
---

<section
  class="px-4 my-40 flex flex-row justify-center items-center w-full relative sm:px-12 sm:pb-14 2xl:pb-20 2xl:h-fit scroll-mt-[30svh]"
>
  <div class="flex flex-row">
    <div class="flex flex-col w-full px-12">
      <div class="flex gap-8">
        <div class="flex flex-1 flex-col gap-4 text-start">
          <div class="flex">
            <h2 class="text-ai-header">Flexible live stream utilities</h2>
            <span
              class="ml-2 px-3 h-fit py-1 rounded-full text-xs font-medium border"
              style={{
                backgroundColor: "#C2B1E0",
                color: "#302555",
                borderColor: "#624BAA",
              }}>Available soon</span
            >
          </div>
          <p class="text-useCases-tileSubheader">
            Build powerful live stream experiences. Our programmable toolkit
            gives developers ultimate control over real-time video composition
            and dynamic content integration directly into their applications.
          </p>
          <div class="scroller" data-direction="right" data-speed="slow">
            <div class="scroller__inner">
              {UTILITIES.map((utility) => <UtilityTile {...utility} />)}
            </div>
          </div>
        </div>
        <div class="relative flex flex-1 aspect-video">
          <video
            id="videoBottom"
            class="absolute top-0 left-0 aspect-video rounded-xl object-cover"
            playsinline
            autoplay
            muted
            loop
          >
            <source src="/example-video.mp4" type="video/mp4" />
            Your browser does not support the video tag.
          </video>
          <video
            id="videoTop"
            class="absolute top-0 left-0 aspect-video rounded-xl object-cover"
            playsinline
            autoplay
            muted
            loop
          >
            <source src="/example-video.mp4" type="video/mp4" />
            Your browser does not support the video tag.
          </video>
        </div>
      </div>
      <!-- <div class="flex mt-4">
        <div class="flex-1">
          <div
            class="border border-solid border-ai-border w-fit flex flex-1.5 rounded-xl p-px h-14"
          >
            <div
              class="relative z-0 flex h-full flex-col justify-center px-6 sm:px-7"
            >
            </div>
          </div>
        </div>
      </div> -->
    </div>
  </div>
</section>

<style is:global>
  .scroller {
    max-width: 650px;
    cursor: pointer;
  }

  .scroller__inner {
    padding-block: 1.5rem;
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
  }

  .scroller {
    overflow: hidden;
    -webkit-mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    );
    mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    );
  }

  .scroller[data-animated="true"] .scroller__inner {
    width: max-content;
    flex-wrap: nowrap;
    animation: scroll var(--_animation-duration, 40s)
      var(--_animation-direction, forwards) linear infinite;
    animation-play-state: running;
  }

  .scroller[data-animated="false"] .scroller__inner {
    width: max-content;
    flex-wrap: nowrap;
    animation: scroll var(--_animation-duration, 40s)
      var(--_animation-direction, forwards) linear infinite;
    animation-play-state: paused;
  }

  .scroller[data-direction="right"] {
    --_animation-direction: reverse;
  }

  .scroller[data-direction="left"] {
    --_animation-direction: forwards;
  }

  .scroller[data-speed="fast"] {
    --_animation-duration: 20s;
  }

  .scroller[data-speed="slow"] {
    --_animation-duration: 40s;
  }

  @keyframes scroll {
    to {
      transform: translate(calc(-50% - 0.5rem));
    }
  }
</style>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    if (!window.matchMedia("(prefers-reduced-motion: reduce)").matches) {
      addAnimation();
    }
    function addAnimation() {
      const scroller = document.querySelector(".scroller");
      scroller.setAttribute("data-animated", true);

      const scrollerInner = scroller.querySelector(".scroller__inner");
      const scrollerContent = Array.from(scrollerInner.children);
      scrollerContent.forEach((item) => {
        const duplicatedItem = item.cloneNode(true);
        duplicatedItem.setAttribute("aria-hidden", "true");
        scrollerInner.appendChild(duplicatedItem);
      });

      scroller.addEventListener("mouseover", () => {
        scroller.setAttribute("data-animated", false);
      });

      scroller.addEventListener("mouseout", () => {
        scroller.setAttribute("data-animated", true);
      });
    }
  });
</script>
