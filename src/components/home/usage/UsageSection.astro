---
import { Image } from "astro:assets";
import UsageItem from "./UsageItem.astro";

import docker from "../../../assets/usage/docker.svg";
import elixir from "../../../assets/usage/elixir.svg";
import react from "../../../assets/usage/react.svg";
import usageBlur from "../../../assets/usage/usage-blur.svg";

const USE_CASES = [
  {
    label: "React / TypeScript SDK",
    iconUrl: react,
    text: "React is a powerful library for building user interfaces, leverage its benefits and seamlessly compose scenes. Alternatively, you can manage your Smelter instance directly using TypeScript SDK.",
    buttons: {
      docs: "/docs/ts-sdk",
    },
  },
  {
    label: "Membrane plugin",
    iconUrl: elixir,
    text: "Membrane is a developer-friendly multimedia framework for Elixir. With its use, you can easily integrate video and audio mixing into your multimedia pipeline using the Membrane Smelter plugin.",
    buttons: {
      docs: "https://hexdocs.pm/membrane_live_compositor_plugin/0.9.0/Membrane.LiveCompositor.html",
      repository: "https://github.com/membraneframework/membrane_live_compositor_plugin",
    },
  },
  {
    label: "Standalone server",
    iconUrl: docker,
    text: "Deploy Smelter as a standalone server. Its language-agnostic API integrates easily with your solutions. With Dockerfiles and comprehensive deployment guidelines in our documentation, setting up Smelter is effortless.",
    buttons: {
      docs: "https://www.smelter.dev/deployment/examples/binaries/",
      dockerfiles: "https://github.com/software-mansion/smelter/tree/master/build_tools/docker",
    },
  },
] as const;
---

<section class="relative mb-28 flex flex-col items-center px-4 min-h-screen lg:px-8 xl:px-40 text-center overflow-x-clip 2xl:mb-0 2xl:h-fit 2xl:min-h-[unset]">
  <h2 class="mb-6 text-usage-header">Start using Smelter</h2>
  <p class="par-l text-usage-subheader">Select an option to seamlessly blend smelter into your existing solutions.</p>
  <div class="mt-12 flex flex-col gap-4 sm:mt-20 text-start w-full md:w-fit">
    {USE_CASES.map(useCase => <UsageItem {...useCase} />)}
  </div>
  <Image id="usageBlur" src={usageBlur} alt="gradient" class="absolute -right-32 top-8 sm:-right-72 sm:-top-40 -z-10" />
</section>

<script type="module">
  document.addEventListener('DOMContentLoaded', function () {
    const parallaxImage = document.getElementById('usageBlur');
    const parentSection = parallaxImage.closest('section');

    const handleScroll = () => {
        const sectionTop = parentSection.getBoundingClientRect().top;
        const scrollY = window.screenY;
        const sectionTopToPageTop = scrollY + sectionTop;
        const relativeTop = scrollY - sectionTopToPageTop + window.innerHeight;
        
        if (relativeTop > -window.innerHeight && sectionTop < window.innerHeight) {
            const translateY = (relativeTop * 0.2);
            parallaxImage.style.transform = `translateY(-${translateY}px)`;
        }
    };

  	window.addEventListener('scroll', handleScroll);
  });
</script>
