---
import { Icon } from '@astrojs/starlight/components'
import starlightConfig from 'virtual:starlight/user-config'
import starlightVersionsConfig from 'virtual:starlight-versions-config'

import { getVersionFromSlug, getVersionURL } from '../libs/versions'

const pageVersion = getVersionFromSlug(starlightVersionsConfig, starlightConfig, Astro.locals.starlightRoute.entry.slug)
let displayBanner = !!pageVersion;

if(pageVersion) {

  const [versionName] = pageVersion.slug.split('/')
  const versionsBySlug = Object.keys(starlightVersionsConfig.versionsBySlug).filter((versionSlug) => versionSlug.includes(versionName))
  const currentVersion = versionsBySlug.sort().slice(-1)[0]

  displayBanner = pageVersion && currentVersion !== pageVersion.slug
}
---

{
  displayBanner && (
    <p>
      <Icon name="seti:clock" size="1em" color="var(--sl-color-orange-high)" />
      <span>
        This content is for {pageVersion.label ?? `the ${pageVersion.slug} version`}. Switch to the
        {/* prettier-ignore */}
        <a id="version-switch-link" href={`${getVersionURL(starlightVersionsConfig, starlightConfig, Astro.url, undefined).pathname}?bannerRedirect`}>latest version</a>
        for up-to-date documentation.
      </span>
    </p>
  )
}

<style>
  p {
    display: flex;
    border: 1px solid var(--sl-color-orange);
    padding: 0.75em 1em;
    background-color: var(--sl-color-orange-low);
    color: var(--sl-color-orange-high);
    width: max-content;
    max-width: 100%;
    align-items: center;
    gap: 0.75em;
    font-size: var(--sl-text-sm);
    line-height: var(--sl-line-height-headings);
  }

  p a {
    color: var(--sl-color-orange-high);
  }

  p :global(svg) {
    flex-shrink: 0;
  }
</style>

<script>
  import { navigate } from 'astro:transitions/client'

  const handleNewVersion = (href: string | null) => {
    if (href) {
      document.cookie = 'selectedVersion=current; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;'
      navigate(href)
    }
  }

  document.addEventListener('astro:page-load', () => {
    const link = document.getElementById('version-switch-link')
    if (link) {
      const href = link.getAttribute('href')
      link.removeEventListener('click', () => handleNewVersion(href))
      link.addEventListener('click', () => {
        handleNewVersion(href)
      })
    }
  })
</script>
